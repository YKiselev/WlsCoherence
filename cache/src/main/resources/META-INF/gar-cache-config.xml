<?xml version="1.0"?>
<cache-config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns="http://xmlns.oracle.com/coherence/coherence-cache-config"
              xsi:schemaLocation="http://xmlns.oracle.com/coherence/coherence-cache-config coherence-cache-config.xsd">

    <defaults>
        <serializer>pof</serializer>
        <!--<serializer>-->
            <!--<instance>-->
                <!--<class-name>com.tangosol.io.pof.ConfigurablePofContext</class-name>-->
                <!--<init-params>-->
                    <!--<init-param>-->
                        <!--<param-type>String</param-type>-->
                        <!--<param-value>cache-api-pof-config.xml</param-value>-->
                    <!--</init-param>-->
                <!--</init-params>-->
            <!--</instance>-->
        <!--</serializer>-->
    </defaults>

    <caching-scheme-mapping>
        <cache-mapping>
            <cache-name>Users</cache-name>
            <scheme-name>users</scheme-name>
        </cache-mapping>

        <cache-mapping>
            <cache-name>Managers</cache-name>
            <scheme-name>distributed-hibernate-backed</scheme-name>
            <init-params>
                <init-param>
                    <param-name>entity-name</param-name>
                    <param-value>org.test.pof.Manager</param-value>
                </init-param>
            </init-params>
        </cache-mapping>

        <cache-mapping>
            <cache-name>Departments</cache-name>
            <scheme-name>distributed-hibernate-backed</scheme-name>
            <init-params>
                <init-param>
                    <param-name>entity-name</param-name>
                    <param-value>org.test.pof.Department</param-value>
                </init-param>
            </init-params>
        </cache-mapping>
    </caching-scheme-mapping>

    <caching-schemes>
        <!--     DB Backed Distributed caching scheme.    -->
        <distributed-scheme>
            <scheme-name>users</scheme-name>
            <scheme-ref>distributed-jdbc-backed</scheme-ref>
            <backing-map-scheme>
                <read-write-backing-map-scheme>
                    <internal-cache-scheme>
                        <local-scheme>
                            <high-units>1000</high-units>
                            <expiry-delay>5m</expiry-delay>
                        </local-scheme>
                    </internal-cache-scheme>
                    <cachestore-scheme>
                        <class-scheme>
                            <scheme-ref>my-store-class-scheme</scheme-ref>
                        </class-scheme>
                    </cachestore-scheme>
                </read-write-backing-map-scheme>
            </backing-map-scheme>
        </distributed-scheme>

        <distributed-scheme>
            <scheme-name>distributed-hibernate-backed</scheme-name>
            <service-name>DistributedCache</service-name>
            <backing-map-scheme>
                <read-write-backing-map-scheme>
                    <internal-cache-scheme>
                        <local-scheme>
                            <high-units>1000</high-units>
                            <expiry-delay>5m</expiry-delay>
                        </local-scheme>
                    </internal-cache-scheme>
                    <cachestore-scheme>
                        <class-scheme>
                            <scheme-ref>hibernate-store-class-scheme</scheme-ref>
                        </class-scheme>
                    </cachestore-scheme>
                    <read-only>false</read-only>
                    <write-delay-seconds>0</write-delay-seconds>
                </read-write-backing-map-scheme>
            </backing-map-scheme>
        </distributed-scheme>

        <!--   Template: JDBC backed distributed scheme   -->
        <distributed-scheme>
            <scheme-name>distributed-jdbc-backed</scheme-name>
            <service-name>DistributedCache</service-name>
            <serializer>pof</serializer>
            <backing-map-scheme>
                <read-write-backing-map-scheme>
                    <internal-cache-scheme>
                        <local-scheme>
                            <high-units>200</high-units>
                            <expiry-delay>1m</expiry-delay>
                        </local-scheme>
                    </internal-cache-scheme>
                    <cachestore-scheme>
                        <class-scheme>
                            <scheme-ref>my-store-class-scheme</scheme-ref>
                        </class-scheme>
                    </cachestore-scheme>
                    <read-only>false</read-only>
                    <write-delay-seconds>0</write-delay-seconds>
                </read-write-backing-map-scheme>
            </backing-map-scheme>

            <autostart>true</autostart>
        </distributed-scheme>

        <class-scheme>
            <scheme-name>my-store-class-scheme</scheme-name>
            <class-name>org.test.stores.MyStore</class-name>
            <init-params>
                <init-param>
                    <param-type>java.lang.String</param-type>
                    <param-value>{cache-name}</param-value>
                </init-param>
            </init-params>
        </class-scheme>

        <class-scheme>
            <scheme-name>hibernate-store-class-scheme</scheme-name>
            <class-name>org.test.stores.MyHibernateStore</class-name>
            <init-params>
                <init-param>
                    <param-type>java.lang.String</param-type>
                    <param-value>{entity-name}</param-value>
                </init-param>
            </init-params>
        </class-scheme>

        <invocation-scheme>
            <scheme-name>invocation-service</scheme-name>
            <service-name>ExtendTcpInvocationService</service-name>
            <thread-count>2</thread-count>
            <autostart>true</autostart>
        </invocation-scheme>

        <proxy-scheme>
            <service-name>ExtendTcpProxyService</service-name>
            <thread-count>5</thread-count>
            <acceptor-config>
                <tcp-acceptor>
                    <local-address>
                        <port>27600</port>
                    </local-address>
                </tcp-acceptor>
            </acceptor-config>

            <proxy-config>
                <cache-service-proxy>
                    <class-name>org.test.security.EntitledCacheService</class-name>
                    <init-params>
                        <init-param>
                            <param-type>com.tangosol.net.CacheService</param-type>
                            <param-value>{service}</param-value>
                        </init-param>
                    </init-params>
                    <enabled>true</enabled>
                </cache-service-proxy>
                <invocation-service-proxy>
                    <class-name>org.test.security.EntitledInvocationService</class-name>
                    <init-params>
                        <init-param>
                            <param-type>com.tangosol.net.InvocationService</param-type>
                            <param-value>{service}</param-value>
                        </init-param>
                    </init-params>
                    <enabled>true</enabled>
                </invocation-service-proxy>
            </proxy-config>
            <autostart>true</autostart>
        </proxy-scheme>

    </caching-schemes>
</cache-config>
